@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Reset password";
    bool isExternalRegister = ViewData["isExternalRegister"] as bool? ?? false;
}
<div class="card-body p-5">
    <div class="text-center">
        @if(isExternalRegister)
        {
            <h1 class="h4 text-gray-900 mb-4">Set Your Password</h1>
        }else{
            <h1 class="h4 text-gray-900 mb-4">Reset Your Password</h1>
        }
    </div>
    <form method="post">
        @Html.AntiForgeryToken()
        <input asp-for="Input.Token" type="hidden" />
        <input asp-for="Input.Email" type="hidden" />
        <input asp-for="Input.IsExternalRegister" type="hidden" />
        <!-- Password Input -->
        <div class="form-group">
            <label asp-for="Input.Password" class="text-dark"></label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-lock"></i></span>
                </div>
                <input asp-for="Input.Password" id="inputPassword" type="password" class="form-control" autocomplete="new-password" aria-required="true" />
            </div>
            <span asp-validation-for="Input.Password" class="text-danger small validation-message"></span>
            <ul class="text-muted small pl-3" id="passwordRequirements">
                <li id="req-length">At least 6 characters</li>
                <li id="req-uppercase">At least 1 uppercase letter (A-Z)</li>
                <li id="req-lowercase">At least 1 lowercase letter (a-z)</li>
                <li id="req-number">At least 1 number (0-9)</li>
                <li id="req-special">At least 1 special character (@Html.Raw("!@#$%^&*"))</li>
            </ul>
        </div>

        <!-- Confirm Password Input -->
        <div class="form-group">
            <label asp-for="Input.ConfirmPassword" class="text-dark"></label>
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-lock"></i></span>
                </div>
                <input asp-for="Input.ConfirmPassword" type="password" class="form-control" aria-required="true" />
            </div>
            <span asp-validation-for="Input.ConfirmPassword" class="text-danger small validation-message"></span>
        </div>
        @if(isExternalRegister)
        {
            <button type="submit" class="btn btn-primary btn-block">Set Password</button>
        }else{
            <button type="submit" class="btn btn-primary btn-block">Reset Password</button>
        }
    </form>
</div>
            
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const inputPassword = document.getElementById("inputPassword");
            const reqLength = document.getElementById("req-length");
            const reqUppercase = document.getElementById("req-uppercase");
            const reqLowercase = document.getElementById("req-lowercase");
            const reqNumber = document.getElementById("req-number");
            const reqSpecial = document.getElementById("req-special");

            inputPassword.addEventListener("input", function () {
                const password = inputPassword.value;
                reqLength.classList.toggle("text-success", password.length >= 6);
                reqUppercase.classList.toggle("text-success", /[A-Z]/.test(password));
                reqLowercase.classList.toggle("text-success", /[a-z]/.test(password));
                reqNumber.classList.toggle("text-success", /\d/.test(password));
                reqSpecial.classList.toggle("text-success", /[@Html.Raw("!@#$%^&*")]/.test(password));
            });
        });
    </script>
}
